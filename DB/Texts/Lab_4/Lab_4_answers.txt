1. Классифицируйте файлы СУБД Oracle 12c.
 - Управляющие
 - Параметры
 - Сообщения
 - Пароли
 - Данные
 - Временные данные
 - Откат
 - Журнал повторного выполнения
 - Архивы
 - Диагностика
 - Трассировка
 

2. Перечислите структуры данных организованных в форме табличных пространств.
???

3. Какие табличные пространства создаются при инсталляции Oracle 12с? Поясните их назначение.

 - SYSTEM: Хранит данные для словаря данных.
 - SYSAUX: Дополнительное пространство для поддержки функциональности базы данных.
 - TEMP: Временное табличное пространство для операций, требующих временного хранения данных.
 - UNDOTBS1: Используется для хранения данных об отмене (undo) изменений, сделанных в базе данных.
 - USERS: Используется для хранения данных о пользователях
 

4. Что означает свойство табличных пространств smallfile/bigfile?

Свойство табличных пространств smallfile и bigfile в Oracle определяет структуру хранения данных и управление файлами, что влияет на производительность и управление базой данных.

smallfile:  Табличное пространство smallfile создаётся с использованием множества файлов данных, каждый из которых может иметь размер до 4 ГБ (в большинстве систем).

 - Подходит для баз данных, где нужно создать множество таблиц и пространств.
 - Позволяет гибкость в управлении размером и количеством файлов, что полезно для распределения нагрузки на разные диски.
 - Чаще используется в традиционных развертываниях.
 

bigfile: Табличное пространство bigfile может содержать только один файл данных, размер которого может достигать 8 эксабайт (в теориях) или 128 ТБ в большинстве систем.

 - Позволяет упрощённое управление пространством, так как не нужно следить за множеством файлов.
 - Может снизить накладные расходы, связанные с управлением множественными файлами.
 - Идеально подходит для больших таблиц и хранилищ данных, когда необходимо использовать большие объемы данных.
 

5. Что означает свойство табличных пространств logging/nologging?

Свойства табличных пространств logging и nologging в Oracle определяют, как операции с данными в этих пространствах будут записываться в журнал восстановлений (redo log)

logging: при настройке табличного пространства со свойством logging, все изменения данных (включая вставки, обновления и удаления) записываются в журнал восстановления.

 - Обеспечивает безопасность данных, так как можно выполнять восстановление базы данных в случае сбоя.
 - Гарантирует, что все транзакции могут быть восстановлены, обеспечивая целостность данных.
 - Рекомендуется для критически важных таблиц, где важна сохранность данных.

nologging:  Если табличное пространство настроено на nologging, операции с данными не будут записываться в журнал восстановления, что может ускорить выполнение операций, 
но также увеличивает риск потери данных.

 - Повышает производительность для операций, где скорость выполнения важнее сохранности данных, например, при загрузке больших объемов данных.
 - Подходит для данных, которые не требуют высокой степени безопасности, таких как временные данные или данные, которые могут быть восстановлены из других источников
 

6. Что означает свойство табличных пространств offline/online?

Свойства табличных пространств offline и online в Oracle определяют доступность табличного пространства и его содержимого для пользователей и приложений.

offline: Свойства табличных пространств offline и online в Oracle определяют доступность табличного пространства и его содержимого для пользователей и приложений.

online: Когда табличное пространство находится в состоянии online, оно доступно для чтения и записи. Пользователи и приложения могут выполнять операции чтения и записи в таблицы, 
содержащиеся в этом пространстве

7. Каким образом можно выяснить наименование применяемого инстансом Oracle 12c имя UNDO-табличного пространства?   

SELECT value FROM v$parameter WHERE name = 'undo_tablespace';

или

SELECT tablespace_name FROM dba_tablespaces WHERE contents = 'UNDO';



8. Что такое сегмент табличного пространства?

Сегмент табличного пространства — – область на диске, выделяемая под объекты.

9. Перечислите типы сегментов? Как получить все типы сегментов? 

Сегменты типизируются  в зависимости от типа данных, хранящихся в них:
 - LOBINDEX
 - INDEX PARTITION
 - ROLLBACK
 - NESTED TABLE
 - TABLE PARTITION
 - LOB PARTITION
 - LOBSEGMENT
 - INDEX
 - TABLE
 - CLUSTER
 
 Чтобы получить все типы сегментов: select distinct segment_type from dba_segments;
 
 
10. Удаляется ли (или сокращается) сегмент таблицы при удалении (DELETE) всех строк таблицы? 

При выполнении операции DELETE всех строк таблицы сегмент таблицы НЕ УДАЛЯЕТСЯ и НЕ СОКРАЩАЕТСЯ автоматически.
(Операция DELETE маркирует строки как удаленные, но фактические данные остаются на диске, пока не будет выполнена последующая операция, такая как TRUNCATE или изменение сегмента.)


11. Что происходит с сегментом таблицы XXX_T1 при удалении ее оператором drop table XXX_T1?

при обычном DROP TABLE таблица и её сегменты удаляются из пользовательского пространства; при включённой корзине объект и связанные сегменты сначала попадают в recyclebin 
(пространство при этом остаётся занятым), и только при PURGE/отключённой корзине сегмент физически удаляется и освобождает место в табличном пространстве.

12. Поясните назначение представление USER_RECYCLEBIN.

USER_RECYCLEBIN — это представление (view) в Oracle, которое показывает объекты, помещённые в корзину (recycle bin) текущего пользователя после выполнения оператора DROP

13. Что происходит с сегментом таблицы XXX_T1 при удалении ее оператором drop table XXX_T1 purge?

в Oracle 12c происходит немедленное и окончательное удаление таблицы без помещения её в корзину (recyclebin).
DROP ... PURGE полностью и немедленно удаляет таблицу и все её сегменты, освобождая пространство и делая восстановление через recyclebin невозможным.

14. Что такое экстент табличного пространства?

Экстент (extent) — это непрерывный набор смежных блоков данных, выделяемых Oracle одному сегменту (таблице, индексу и т.д.) для хранения данных. 
Экстент находится «между» уровнем блока данных и уровнем сегмента: сегмент состоит из одного или нескольких экстентов, а экстент — из одного или нескольких блоков данных.

Краткое summary: экстент — это единица выделения пространства для сегмента (набор смежных блоков). Сегмент состоит из экстентов; 
управление размерами и выделением экстентов определяется настройками объекта и табличного пространства.


15. Поясните назначение опции EXTENT MANAGEMENT LOCAL при создании табличного пространства.

EXTENT MANAGEMENT LOCAL — опция при создании табличного пространства в Oracle, которая задаёт локальное (внутри табличного пространства) управление экстентами вместо использования словаря данных. 
EXTENT MANAGEMENT LOCAL указывает, что информация о свободных и занятых экстентах хранится в самом табличном пространстве (внутренних структурах, битовых картах), а не в системных словарных таблицах (dictionary-managed).
Типы локального управления:
  -UNIFORM — экстенты выделяются фиксированного размера (указывается SIZE при создании). Хорошо, если объекты имеют предсказуемый рост.
  -AUTOALLOC — размер экстента определяется автоматически и может меняться (Oracle подбирает оптимальные размеры при росте). По умолчанию в современных версиях используется 


16. Поясните назначение опции UNIFORM при создании табличного пространства.

UNIFORM при создании табличного пространства в Oracle задаёт стратегию выделения экстентов — все экстенты в этом табличном пространстве будут иметь одинаковый фиксированный размер.

17. Что такое блок данных табличного пространства?  Где и как задается его размер? Как выяснить размер блока? 

Блок данных — минимальная логическая и физическая единица хранения и ввода/вывода в Oracle. Все данные таблиц и индексов адресуются и читаются/записываются целыми блоками. 
С точки зрения Oracle сегмент состоит из экстентов, экстент — из блоков данных. Блок содержит ряд строк (row pieces), заголовок блока и служебную информацию 
(SCN, транзакционные заголовки и т.д.). Размер блока влияет на плотность размещения строк, количество I/O при сканировании и общую эффективность работы с диском.

-Глобально для базы данных размер блока задаётся параметром инициализации DB_BLOCK_SIZE
-В Oracle можно иметь табличные пространства с отличающимся от дефолтного размером блока — при создании табличного пространства используется опция BLOCKSIZE
-Изменить размер блока существующей базы (вместо создания нового табспейса) нельзя — чтобы «сменить» размер блока для объектов, нужно создать табличное пространство с другим BLOCKSIZE 

Узнать размер блока:
Размер блока базы (параметр): SELECT value FROM v$parameter WHERE name = 'db_block_size'; 

18. Для чего необходимы журналы повтора?

Журналы повтора (redo logs) — критически важный компонент Oracle, предназначенный для обеспечения восстановления и целостности данных. 
Они являются источником правдоподобного лога всех модификаций, необходимых для восстановления после сбоев, для архивации, репликации и поддержания целостности транзакций.

19. Поясните термины «мультиплекирование журналов повтора», «группа журналов повтора».

Группа журналов повтора (redo log group)
  -Определение: логическая единица online‑redo journaling, состоящая из одного или нескольких файлов (членов). Каждая группа имеет уникальный номер (GROUP#) и фиксированный размер; 
  при работе инстанса запись идёт в текущую группу.
  -Состояния группы: например, CURRENT (текущая, куда пишет LGWR), ACTIVE (содержит redo, нужный для восстановления), UNUSED и т.д. Список групп и их состояния виден в представлении V$LOG.
  Поведение: при переключении логов (log switch) Oracle переводит запись в следующую группу; заполненная группа либо архивируется (в ARCHIVELOG режиме), 
  либо перезаписывается (в NOARCHIVELOG режиме) после переключения.
  
Мультиплексирование журналов повтора (multiplexing of redo logs)
  -Определение: практика создания нескольких копий (членов) одной и той же группы redo на разных физических носителях. Т.е. группа содержит не один файл, а несколько файлов‑членов 
  (members) с одинаковым содержимым. Эти файлы одновременно представляют одну и ту же группу.
  -Назначение: повышенная отказоустойчивость — если один физический файл/диск выйдет из строя, Oracle продолжит работать, т.к. другой член группы доступен. 
  Это не репликация в смысле синхронной записи в разную базу — это просто дублирование файлов на разных носителях.

20. Какие параметры регламентируют максимальное  количество групп журналов повтора и максимальное количество файлов в группе? Где эти параметры находятся? 
Каким образом их можно их посмотреть? Каким образом изменить?

  MAXLOGFILES — максимум групп redo‑журналов, которые может содержать база данных (логические группы).
  MAXLOGMEMBERS — максимум членов (файлов) в одной группе (число копий группы, т.е. мультиплексирование).
  Дополнительно есть MAXLOGHISTORY — число записей истории переключения логов, не напрямую про количество файлов, но связанное с историей лог‑свитчей.
  
  Это стандартные параметры инициализации базы (pfile/spfile). Их значения хранятся в текущем параметрическом наборе экземпляра 
  (SPFILE или PFILE) и видны через динамические представления/утилиты (v$parameter, SHOW PARAMETER).
  
21. Каким образом можно определить группу повтора, в настоящий момент используемую инстансом Oracle 12c? 

Определить текущую (т.е. в данный момент записываемую) группу журналов повтора можно через представления V L O G и V LOGиVLOGFILE.

22. Расшифруйте аббревиатуру SCN. Что это такое. Каким образом можно проследить последовательность SCN в журналах повтора?

SCN — System Change Number.
Это монотонно растущий глобальный счётчик изменений в Oracle, который используется для упорядочивания всех транзакций и состояний базы.
Каждой значимой событию (фиксации транзакции, изменению блоков и т.д.) сопоставляется SCN; SCN применяется при восстановлении, флэшбэке, репликации и тд.

Как посмотреть текущий SCN

    Текущий SCN базы: SELECT CURRENT_SCN FROM V$DATABASE;


23. Что такое архивы Oracle 12c? Каким образом можно проследить последовательность SCN в архивах и журналах повтора?


Архивы (archived redo logs) — это копии заполненных online‑redo файлов (журналов повтора), сохранённые вне активных online‑логов для обеспечения возможности полного 
восстановления базы до любой точки во времени. В режиме ARCHIVELOG при переключении группы redo (log switch) заполненный online‑файл либо архивируется (копируется в директорию архива), 
либо, при мультиплексировании, архивируется каждая его копия.


Как проследить последовательность SCN в архивах и online‑журналах повтора
V$LOG — для online redo групп
V$ARCHIVED_LOG — для уже архивированных redo‑файлов


24. Как выяснить выполняется ли архивирование инстансом или нет? Как включить  архивирование и как выключить?

Как выяснить, включено ли архивирование

SELECT LOG_MODE FROM V$DATABASE; — вернёт ARCHIVELOG или NOARCHIVELOG. 

Как включить архивирование (включение ARCHIVELOG):
переход в ARCHIVELOG требует, чтобы база была в состоянии MOUNT. Выполняется с перезапуском (downtime). 
 -Подготовка: убедитесь, что у вас есть резервная копия controlfile и достаточно места для архивов; настройте параметры DEST (если нужно).
 -Остановить и монтировать: SHUTDOWN IMMEDIATE; STARTUP MOUNT;
 -Включить режим ARCHIVELOG: ALTER DATABASE ARCHIVELOG; 
 -Открыть базу: ALTER DATABASE OPEN; 
 
Как выключить архивирование (переключиться в NOARCHIVELOG):
Также требуется состояние MOUNT; учтите — при переводе в NOARCHIVELOG вы потеряете возможность полного восстановления до произвольной точки времени после текущего бэкапа.


25. Как определить номер последнего архива? Как определить местоположение архивных файлов?
номер последнего архива — из V$ARCHIVED_LOG (MAX(sequence#) по thread#) или последний по ORDER BY sequence_;

26. Что такое управляющие файлы Oracle 12c? Поясните, почему требуется мультиплексирование  управляющих файлов. Где задано их количество и местоположение. Как получить их содержимое?

Управляющие файлы — критически важные бинарные файлы Oracle, содержащие метаданные о состоянии базы
Почему требуется мультиплексирование управляющих файлов
Поскольку управляющий файл — single point of failure, потеря единственного control file может привести к невозможности старта/восстановления базы или к сложной процедуре восстановления.

Где задано количество и местоположение управляющих файлов
Места хранения управляющих файлов задаются параметром инициализации CONTROL_FILES (в PFILE или SPFILE).

Как посмотреть, где они находятся (простые команды)
Или SQL: SELECT name, value FROM v$parameter WHERE name = 'control_files'; 

Как изменить список (поменять количество/пути) Изменение CONTROL_FILES выполняется через параметр и требует рестарта экземпляра: 

    Подготовка: убедитесь, что файлы, указанные в новом списке, существуют и являются точными копиями текущего управляющего файла. Обычно последовательность действий:
        Сделать копию существующего управляющего файла в новые пути (на уровне ОС или командой ALTER DATABASE BACKUP CONTROLFILE TO 'path' — см. ниже), или использовать копирование файлов OS-утилитой.
    Изменить параметр в SPFILE (или в pfile): ALTER SYSTEM SET CONTROL_FILES = '/new/path/control01.ctl','/new/path/control02.ctl' SCOPE=SPFILE;
    Перезапустить базу: SHUTDOWN IMMEDIATE; STARTUP; (иногда рекомендуется STARTUP MOUNT -> проверка -> OPEN)
    Проверить, что Oracle открыл все указанные файлы и что в представлениях отражены новые пути. Важно: установка SCOPE=SPFILE записывает значение в SPFILE; если используется PFILE, измените init.ora.
    
    
27.Что такое файл параметров? Как выяснить его местоположение? В чем разница между SPFILE и PFILE? Какая возможность появляется (приведите пример) при наличии бинарного формата файла параметров?



