1. Назначение npm

npm (Node Package Manager) — это менеджер пакетов для экосистемы Node.js. Он позволяет публиковать, устанавливать, обновлять и управлять зависимостями (библиотеками и утилитами) проекта.
Также npm предоставляет реестр (registry) — центральное хранилище пакетов, и CLI-инструмент для работы с ним.


2. Команды npm для просмотра списка установленных пакетов

npm list — показать дерево зависимостей в текущем проекте (по умолчанию показывает локально установленные пакеты).
npm list --depth=0 — показать только пакеты верхнего уровня (чтобы не выводить всё дерево).
npm list -g --depth=0 — показать глобально установленные пакеты (всего верхнего уровня)
npm ls — синоним npm list
npm outdated — покажет установленные пакеты, для которых доступны обновления.


3. Назначение параметра -g в командах npm

Параметр -g (или --global) указывает npm устанавливать/удалять/просматривать пакеты глобально, т.е. в общей для системы папке глобальных модулей.
Глобальная установка делает бинарные команды пакета доступными из любого места (добавляет исполняемые файлы в PATH).

4. Команды npm для скачивания (установки) пакета

npm install <package> — установить пакет локально в текущий проект и добавить в node_modules.
npm install <package> --save — (устар.) явно добавить в dependencies; сейчас npm install <package> по умолчанию добавляет в package.json.
npm install <package> --save-dev — установить как devDependency.
npm install -g <package> — установить пакет глобально.
npm install <package>@<version> — установить конкретную версию.

5. Назначение файла package.json

package.json — манифест проекта Node.js: содержит метаданные (name, version, description, автор).В нём перечислены зависимости (dependencies, devDependencies) и версии, которые нужны проекту.
Также в нём задаются скрипты (scripts), точка входа (main), конфигурации публикации и другие настройки, необходимые npm и инструментам сборки.
Файл обеспечивает воспроизводимость и позволяет другим разработчикам и CI быстро установить нужные зависимости и запустить проект.

6. Последовательность действий для публикации пакета в npm

6.1 Подготовьте папку пакета и убедитесь, что в ней есть корректный package.json (заполните поля name, version, main, description, keywords, author, license).
6.2 Убедитесь, что имя пакета уникально в реестре npm (если нужно — используйте scoped name, например @username/mypkg).
6.3 Авторизуйтесь в npm: npm login (введите username, password, email).
6.4 Опубликуйте пакет: npm publish (для scoped пакетов может понадобиться npm publish --access public).
6.5 На сайте https://www.npmjs.com проверьте, что пакет появился в вашем аккаунте и доступен для установки.


7. В чём разница между SMTP и POP3?

SMTP (Simple Mail Transfer Protocol) и POP3 (Post Office Protocol version 3) — это два разных протокола, используемых в электронной почте, с разными целями и поведением.

7.1 Назначение
  SMTP — протокол отправки и пересылки почты между почтовыми клиентами и серверами, а также между серверами. Используется, когда сообщение уходит от отправителя к серверу и при передаче между серверами до серверов получателя.
  POP3 — протокол доступа к почтовому ящику на сервере для получения/скачивания входящих сообщений клиентом пользователя.

7.2 Направление трафика

  SMTP — «входящая» для серверов при приёме писем от других серверов и «исходящая» для клиента при отправке (когда клиент отправляет письмо на SMTP-сервер). По сути — передача/ретрансмиссия.
  POP3 — исключительно для получения почты от сервера к клиенту.
  
7.3 Хранение и состояние сообщений

  SMTP не хранит почту длительно — он передаёт сообщение серверу получателя (или очередует доставку).
  POP3 по умолчанию скачивает сообщения на клиент и часто удаляет их с сервера (режим «download-and-delete»). 
    Клиент может оставить копии, но управление хранением на сервере ограниченное. (Контраст: IMAP обеспечивает хранение и синхронизацию на сервере.)

7.4 Типичный сценарий использования

  SMTP: отправили письмо из почтового клиента → клиент подключается к SMTP-серверу отправителя → сервер пересылает письмо к SMTP-серверу получателя → письмо попадает в почтовый ящик.
  POP3: почтовый клиент подключается к POP3-серверу получателя → скачивает новые письма → обычно удаляет их с сервера (если не настроено иначе).

7.5 Порты и безопасность
  
  SMTP: обычно порты 25 (межсерверные соединения, часто блокируется провайдерами), 587 (submission — отправка почты клиентом, с STARTTLS), 465 (smtps — SMTPS over TLS, исторически/иногда).
  POP3: порт 110 (нешифрованный или с STARTTLS), порт 995 (POP3S — POP3 over SSL/TLS).
(Оба протокола обычно работают через шифрование TLS/SSL для безопасной аутентификации и передачи.)

7.6 Аутентификация и ограничения

  SMTP: при отправке от клиента требуется аутентификация (AUTH) на порту 587/465; серверы также проверяют SPF/DKIM/DMARC для борьбы с подделкой.
  POP3: аутентификация пользователя для доступа к его почтовому ящику (логин/пароль), но не предназначен для проверки подлинности отправителя.

7.7 Короткое резюме:

   SMTP = отправка/транспорт сообщений.
   POP3 = скачивание/чтение сообщений из почтового ящика (обычно с последующим удалением с сервера).




